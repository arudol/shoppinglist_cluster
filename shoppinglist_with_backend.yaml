
apiVersion: v1
kind: Namespace
metadata:
  name: shoppinglist

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
  namespace: shoppinglist
  labels:
    app: shoppinglist # this has no effect on selectors, it is purely for organizational purposes. They help categorize and identify the deploy itself within the Kubernetes API, 
                      # could also be done for services, but less common there

spec:
  replicas: 1 # how many pods from this blueprint
  selector:
    matchLabels:
      app: mongodb # How does a controller which pods belong to a Deployment? -> matchLabels!
  template: #template for pods!
    metadata:
      labels:
        app: mongodb # to identify pods of the same type
        role: backend
    spec:
      containers:
      - name: mongodb #name of the container
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017 # where will it listen

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shoppinglist-deployment
  namespace: shoppinglist
spec:
  replicas: 1 # how many pods from this blueprint
  selector:
    matchLabels:
      app: shoppinglist-frontend # How does a controller which pods belong to a Deployment? -> matchLabels!
  template: #template for pods!
    metadata:
      labels:
        app: shoppinglist-frontend # to identify pods of the same type
        role: frontend
    spec:
      containers:
      - name: shoppinglist-frontend #name of the container
        image: shoppinglist-app
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000 # where will it listen
        env: # pass environment variables expected by the app to containers
        - name: MONGODB_URI
          value: "mongodb://mongodb-service.shoppinglist.svc.cluster.local:27017/" # naming: <servicename>.<namespace>.svc.cluster.local:<Port>


---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: shoppinglist

spec:
  selector:
    app: mongodb # has to match the app label of the *template*
  ports:
    - protocol: TCP
      port: 27017  # can choose freely
      targetPort: 27017 # has to match the port where the pod wants to listen

---
apiVersion: v1
kind: Service
metadata:
  name: shoppinglist-service
  namespace: shoppinglist

spec:
  selector:
    app: shoppinglist-frontend # has to match the app label of the *template*
  ports:
    - protocol: TCP
      port: 8000 # where it will listen: choose freely
      targetPort: 8000 # where it will send traffic to: match port that is expected
  type: LoadBalancer # this will expose externally
  
  # loadBalancerIP: 203.0.113.25Â  # To use with pre-allocated static IP. Now it's your job to make it accessible



